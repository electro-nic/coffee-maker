substitutions:
  device_name: coffee-maker
  coffee_max: "30.00000" 
  
esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp12e

# Enable logging
logger:

# Enable Home Assistant API

ota:
  password: !secret ota_password_coffee_maker

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password


  ap:
    ssid: "Coffee-Maker Fallback Hotspot"
    password: !secret fallback_password_coffee_maker
  reboot_timeout: 0s
captive_portal:

web_server:
  port: 80
# Relay outputs, exposed as switches in Home Assistant
switch:
  - platform: gpio
    pin: GPIO16
    name: "On"
    id: cmonoff
  - platform: gpio
    pin: GPIO14
    name: "Large Coffee"
    id: cmlarge
  - platform: gpio
    pin: GPIO12
    name: "Water"
    id: cmwater

    
    
api:
  password: !secret api_password_coffee_maker

sensor:
  - platform: wifi_signal # Уровень Wi-Fi сигнала положительным числом
    name: "status_${device_name}"
    update_interval: 60s 
    filters:
      - lambda: return x * (-1);
  - platform: uptime # Время работы после последней перезагрузки
    name: "uptime_${device_name}"
    
  - platform: pulse_counter #Сенсор "количества" воды пройденного через таблетку
    pin: GPIO03
    id: my_flow_meter
    name: "Water_Counter${device_name}"
    update_interval: 1s
    
  - platform: integration
    id: water_count_var
    name: "Total Cofee Water"
    sensor: my_flow_meter
    time_unit: min
    
  - platform: ntc
    sensor: resistance_sensor_boiler
    calibration:
      b_constant: 3950
      reference_temperature: 25°C
      reference_resistance: 100kOhm
    name: NTC Temperature Sensor

  # Coffee boiler temperature sensors:
  - platform: resistance
    id: resistance_sensor_boiler
    sensor: ntc_sensor
    configuration: DOWNSTREAM
    resistor: 221kOhm
    name: Resistance Sensor
  - platform: adc
    id: ntc_sensor
    pin: A0
    
binary_sensor:
  - platform: status
    name: "state_${device_name}"
    
#### Water detection ####
  - platform: gpio
    name: "Water Level"
    id: lewel_water
    pin:
      number: GPIO01
      mode: INPUT_PULLUP
      inverted: True
    filters:
      delayed_off: 1000ms
    on_press:
      then:
        script.execute: state_no_water
        
##### Button Maker Coffee #####
  - platform: gpio
    name: "Button Coffee"
    id: start_coffee
    pin:
      number: GPIO00
      mode: INPUT_PULLUP
      inverted: True
    filters:
      delayed_off: 1000ms
    on_press:
      then:
      - if:
          condition:
            binary_sensor.is_off: lewel_water
          then:
             - logger.log: "There is water in the tank, lets turn on the coffee machine and grinding process!"
             - sensor.integration.reset:  water_count_var
             - script.execute: push_8sec_large_coffee
             - if:
                 condition:
                   lambda: "return (id(water_count_var).state > $coffee_max);"
                 then:
                   script.execute: push_large_coffee
          else:
            - logger.log: "Error, no water in the tank, will not star the coffee machine"  
script:
  - id: state_no_water
    then:
      - script.execute: led_red_on_soft
      - logger.log: "Fill Water"
  
  # Enter to programming
  - id: push_8sec_large_coffee
    then:
        - logger.log: "Accept Enter to programming"
        - switch.turn_on: cmlarge
        - delay: 8s
        - switch.turn_off: cmlarge
        
  - id: push_large_coffee
    then:
        - logger.log: "Click 1sec Large Coffee"
        - switch.turn_on: cmlarge
        - delay: 1s
        - switch.turn_off: cmlarge
  - id: led_red_on_soft
    then:
      light.turn_on:
        id: red_led
        brightness: 100%
        transition_length: 100ms
    
light:
  - platform: monochromatic
    id: red_led
    name: "Red led"
    internal: true
    restore_mode: ALWAYS_OFF
    output: led_red
    
output:
  # Red LED
  - platform: esp8266_pwm
    id: led_red
    pin:
      number: GPIO15
      mode: OUTPUT